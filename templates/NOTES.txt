1. To get the initialization token for Yatai run:

  export YATAI_INITIALIZATION_TOKEN=$(kubectl get secret {{ include "yatai.fullname" . }} --namespace {{ .Release.Namespace }} -o jsonpath="{.data.initialization_token}" | base64 --decode)

2. To get the URL for Yatai run:
{{ if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  echo "Visit: http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ . }}setup?token=$YATAI_INITIALIZATION_TOKEN"
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "yatai.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT/setup?token=$YATAI_INITIALIZATION_TOKEN
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "yatai.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "yatai.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}/setup?token=$YATAI_INITIALIZATION_TOKEN
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "yatai.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080/setup?token=$YATAI_INITIALIZATION_TOKEN to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:80
{{- end }}

* NOTE: If using minikube. Make sure call `minikube tunnel` command
